import pandas as pd

# Ruta del archivo Excel
excel_path = "C:/Users/jc.garcia-taheno/Desktop/CE_3_TahenoHijes/Param_Union_TornHelic.xlsx"

# Leer la hoja
df = pd.read_excel(excel_path, sheet_name="ISO_4762")

# Generar el texto con las reglas CATIA
lines = ["Rule Tornillo_Metrico_Rule"]
for i, row in df.iterrows():
    prefix = "if" if i == 0 else "else if"
    lines.append(f"{prefix} Metrica_Seleccionada == {float(row["`Nominal d`"]):.2f}mm {{")
    for col in df.columns[1:]:
        try:
            value = float(row[col])
            lines.append(f"   {col.replace(' ', ' ')} = {value:.3f}mm")
        except (ValueError, TypeError):
            lines.append(f"   {col.replace(' ', '')} = 0.000mm  // Valor inválido en Excel")
    lines.append("}")



# Unir todas las líneas
rules_text = "\n".join(lines)

output_path = "C:/Users/jc.garcia-taheno/Desktop/CE_3_TahenoHijes/Codigos/CATIA_Reglas_Cabeza.txt"
with open(output_path, "w") as f:
    f.write(rules_text)

output_path























# # Datos copiados de la tabla proporcionada
# data = {
#     "Thread d": ["M1,6", "M2", "M2,5", "M3", "M4", "M5", "M6", "M8", "M10", "M12", "(M14)", "M16", "M20", "M24", "M30", "M36", "M42", "M48", "M56", "M64"],
#     "`Nominal d`": [1.6, 2, 2.5, 3,  4, 5, 6, 8, 10,  12, 14, 16, 20, 24, 30 ,36, 42, 48 , 56, 64],
#     "P": [0.35, 0.4, 0.45, 0.5, 0.7, 0.8, 1, 1.25, 1.5, 1.75, 2, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6],
#     "b": [15, 16, 17, 18, 20, 22, 24, 28, 32, 36, 40, 44, 52, 60, 72, 84, 96, 108, 124, 140],
#     "`dk max.`": [3.00, 3.80, 4.50, 5.50, 7.00, 8.50, 10.00, 13.00, 16.00, 18.00, 21.00, 24.00, 30.00, 36.00, 45.00, 54.00, 63.00, 72.00, 84.00, 96.00],
#     "`dk max. for grooved head`": [3.14, 3.98, 4.68, 5.68, 7.22, 8.72, 10.22, 13.27, 16.27, 18.27, 21.33, 24.33, 30.33, 36.39, 45.39, 54.46, 63.46, 72.46, 84.54, 96.54],
#     "`dk min.`": [2.86, 3.62, 4.32, 5.32, 6.78, 8.28, 9.78, 12.73, 15.73, 17.73, 20.67, 23.67, 29.67, 35.61, 44.61, 53.54, 62.54, 71.54, 83.46, 95.46],
#     "`da max.`": [2, 2.6, 3.1, 3.6, 4.7, 5.7, 6.8, 9.2, 11.2, 13.7, 15.7, 17.7, 22.4, 26.4, 33.4, 39.4, 45.6, 52.6, 63, 71],
#     "`ds max.`": [1.60, 2.00, 2.50, 3.00, 4.00, 5.00, 6.00, 8.00, 10.00, 12.00, 14.00, 16.00, 20.00, 24.00, 30.00, 36.00, 42.00, 48.00, 56.00, 64.00],
#     "`ds min.`": [1.46, 1.86, 2.36, 2.86, 3.82, 4.82, 5.82, 7.78, 9.78, 11.73, 13.73, 15.73, 19.67, 23.67, 29.67, 35.61, 41.61, 47.61, 55.54, 63.54],
#     "`e min.`": [1.733, 1.733, 2.303, 2.873, 3.443, 4.583, 5.723, 6.863, 9.149, 11.429, 13.716, 15.996, 19.437, 21.734, 25.154, 30.854, 36.571, 41.131, 46.831, 52.531],
#     "`h max.`": [0.34, 0.51, 0.51, 0.51, 0.6, 0.6, 0.68, 1.02, 1.02, 1.45, 1.45, 1.45, 2.04, 2.04, 2.89, 2.89, 3.06, 3.91, 5.95, 5.95],
#     "`k max.`": [1.60, 2.00, 2.50, 3.00, 4.00, 5.00, 6.00, 8.00, 10.00, 12.00, 14.00, 16.00, 20.00, 24.00, 30.00, 36.00, 42.00, 48.00, 56.00, 64.00],
#     "`k min.`": [1.46, 1.86, 2.36, 2.86, 3.82, 4.82, 5.82, 7.64, 9.64, 11.57, 13.57, 15.57, 19.48, 23.48, 29.48, 35.38, 41.38, 47.38, 55.26, 63.26],
#     "`r min.`": [0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.25, 0.4, 0.4, 0.6, 0.6, 0.6, 0.8, 0.8, 1, 1, 1.2, 1.6, 2, 2],
#     "`s nominal`": [1.5, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10, 12, 14, 17, 19, 22, 27, 32, 36, 41, 46],
#     "`s max.`": [1.58, 1.58, 2.08, 2.58, 3.08, 4.095, 5.14, 6.14, 8.175, 10.175, 12.212, 14.212, 17.23, 19.275, 22.275, 27.275, 32.33, 36.33, 41.33, 46.33],
#     "`s min.`": [1.52, 1.52, 2.02, 2.52, 3.02, 4.020, 5.02, 6.02, 8.025, 10.025, 11.57, 13.57, 17.05, 19.065, 22.065, 27.065, 32.08, 36.08, 41.08, 46.08],
#     "`t min.`": [0.7, 1, 1.1, 1.3, 2, 2.5, 3, 4, 5, 6, 7, 8, 10, 12, 15.5, 19, 24, 28, 34, 38],
#     "`v max.`": [0.16, 0.2, 0.25, 0.3, 0.4, 0.5, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 2, 2.4, 3, 3.6, 4.2, 4.8, 5.6, 6.4],
#     "`dw min.`": [2.72, 3.48, 4.18, 5.07, 6.53, 8.03, 9.38, 12.33, 15.33, 17.23, 20.17, 23.17, 28.87, 34.81, 43.61, 52.54, 61.34, 70.34, 82.26, 94.26],
#     "`w min.`": [0.55, 0.55, 0.85, 1.02, 1.42, 1.88, 2.3, 3.5, 4.6, 6.2, 7.5, 8.75, 10.9, 13.3, 16.3, 20, 24.1, 28.4, 33.5, 39.6],
# }
